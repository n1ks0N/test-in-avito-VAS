[{"E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\components\\App.js":"1","E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\constants\\select.js":"2","E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\reducers\\editReducer.js":"3","E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\constants\\reset.js":"4","E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\reportWebVitals.js":"5","E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\index.js":"6","E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\store.js":"7","E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\reducers\\selectReducer.js":"8","E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\components\\buttons\\types\\ButtonExport.js":"9","E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\components\\buttons\\Buttons.js":"10","E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\components\\buttons\\types\\ButtonReset.js":"11","E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\components\\inputs\\types\\InputText.js":"12","E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\components\\inputs\\Inputs.js":"13","E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\components\\inputs\\types\\InputColor.js":"14","E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\components\\notifications\\Alerts.js":"15","E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\components\\inputs\\types\\Select.js":"16","E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\components\\inputs\\types\\InputFile.js":"17","E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\components\\inputs\\types\\InputGradient.js":"18","E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\components\\inputs\\types\\Textarea.js":"19","E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\components\\Banner.js":"20","E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\components\\notifications\\types\\AlertUsual.js":"21"},{"size":2156,"mtime":1607289259911,"results":"22","hashOfConfig":"23"},{"size":245,"mtime":1607290074193,"results":"24","hashOfConfig":"23"},{"size":236812,"mtime":1607354663688,"results":"25","hashOfConfig":"23"},{"size":235946,"mtime":1607354672187,"results":"26","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"23"},{"size":658,"mtime":1607112440879,"results":"28","hashOfConfig":"23"},{"size":314,"mtime":1606730520347,"results":"29","hashOfConfig":"23"},{"size":2342,"mtime":1607290106070,"results":"30","hashOfConfig":"23"},{"size":272,"mtime":1607113122772,"results":"31","hashOfConfig":"23"},{"size":3213,"mtime":1607278158696,"results":"32","hashOfConfig":"23"},{"size":411,"mtime":1607371911483,"results":"33","hashOfConfig":"23"},{"size":790,"mtime":1607371303498,"results":"34","hashOfConfig":"23"},{"size":6168,"mtime":1607371740623,"results":"35","hashOfConfig":"23"},{"size":1168,"mtime":1607354161141,"results":"36","hashOfConfig":"23"},{"size":755,"mtime":1607272389668,"results":"37","hashOfConfig":"23"},{"size":609,"mtime":1607362394455,"results":"38","hashOfConfig":"23"},{"size":669,"mtime":1607114269156,"results":"39","hashOfConfig":"23"},{"size":1596,"mtime":1607354165803,"results":"40","hashOfConfig":"23"},{"size":791,"mtime":1607063563207,"results":"41","hashOfConfig":"23"},{"size":717,"mtime":1607271855973,"results":"42","hashOfConfig":"23"},{"size":276,"mtime":1607272365571,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1a95fis",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\components\\App.js",[],"E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\constants\\select.js",[],"E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\reducers\\editReducer.js",[],"E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\constants\\reset.js",[],"E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\reportWebVitals.js",[],"E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\index.js",[],"E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\store.js",[],"E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\reducers\\selectReducer.js",[],"E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\components\\buttons\\types\\ButtonExport.js",[],"E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\components\\buttons\\Buttons.js",[],"E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\components\\buttons\\types\\ButtonReset.js",[],"E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\components\\inputs\\types\\InputText.js",[],"E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\components\\inputs\\Inputs.js",["87"],"import React, { useState } from 'react'\r\nimport Select from './types/Select'\r\nimport InputGradient from './types/InputGradient'\r\nimport InputColor from './types/InputColor'\r\nimport InputText from './types/InputText'\r\nimport Textarea from './types/Textarea'\r\nimport InputFile from './types/InputFile'\r\nimport './Inputs.css'\r\n\r\nconst Inputs = ({ resize, change, imageInput, setImageInput, state: { select, banner: { bg, text, color, image, link } } }) => {\r\n    const [colorType, setColorType] = useState({ status: 'Linear', types: ['Linear', 'Solid'] })\r\n\r\n    const colorReader = ({ param }) => {\r\n        setColorType(() => {\r\n            if (param === 'Solid') {\r\n                return { status: 'Solid', types: ['Solid', 'Linear'] }\r\n            } else {\r\n                return { status: 'Linear', types: ['Linear', 'Solid'] }\r\n            }\r\n        })\r\n    }\r\n\r\n    const sizeReader = ({ param }) => {\r\n        change({ // editReducer\r\n            param: param.split(' ')[0],\r\n            name: 'width'\r\n        })\r\n        change({ // editReducer\r\n            param: param.split(' ')[2],\r\n            name: 'height'\r\n        })\r\n        resize({ // selectReducer\r\n            param: param\r\n        })\r\n    }\r\n\r\n    const fileReader = ({ param }) => {\r\n        if (param) {\r\n            const reader = new FileReader()\r\n            reader.readAsDataURL(param)\r\n            reader.onload = () => {\r\n                if (reader.result !== imageInput && reader.result !== image) {\r\n                    setImageInput(() => '') // image-input\r\n                    change({ // editReducer\r\n                        param: reader.result,\r\n                        name: 'image'\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const urlReader = ({ param }) => {\r\n        setImageInput(() => param) // image-input\r\n        if (param !== image && param !== '') {\r\n            change({ // editReducer\r\n                param: param,\r\n                name: 'image'\r\n            })\r\n        }\r\n    }\r\n\r\n    const openColorPicker = () => {\r\n        console.log('CLICKED')\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"panel__group\">\r\n                <Select\r\n                    text=\"Ширина x Высота\"\r\n                    name=\"size\"\r\n                    change={sizeReader}\r\n                    value={select}\r\n                />\r\n            </div>\r\n\r\n\r\n            <div className=\"panel__group panel__double-input panel__group-color\">\r\n                <div className=\"panel__group__input-color\">\r\n                    <div className=\"panel__group__input-color__label\">\r\n                        <label className=\"panel__group__special-label\">Фоновый цвет</label>\r\n                        <Select\r\n                            className=\"\"\r\n                            text=\"\"\r\n                            name=\"colorType\"\r\n                            change={colorReader}\r\n                            value={colorType.types}\r\n                        />\r\n                    </div>\r\n                    {colorType.status === 'Solid' ?\r\n                        <InputColor\r\n                            text=\"\"\r\n                            value={bg}\r\n                            name=\"bg\"\r\n                            change={change}\r\n                        /> :\r\n                        <InputGradient\r\n                            text=\"\"\r\n                            value={bg}\r\n                            name=\"bg\"\r\n                            change={change}\r\n                        />\r\n                    }\r\n                </div>\r\n                <InputColor\r\n                    text=\"Цвет текста\"\r\n                    value={color}\r\n                    name=\"color\"\r\n                    change={change}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"panel__group\">\r\n                <label htmlFor=\"panel-image\">\r\n                    Изображение<br />\r\n                    <span>Вставьте URL картинки или загрузите с компьютера</span>\r\n                </label>\r\n                <div className=\"panel__double-input\" id=\"panel-image\">\r\n                    <div className=\"input-group panel-image__wrapper\">\r\n                        <InputText\r\n                            text=\"\"\r\n                            type=\"url\"\r\n                            value={imageInput}\r\n                            name=\"image\"\r\n                            placeholder=\"https://\"\r\n                            change={urlReader}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <InputFile\r\n                            text=\"Выберите изображение\"\r\n                            name=\"image\"\r\n                            accept=\"image/*\"\r\n                            change={fileReader}\r\n                        />\r\n                    </div>\r\n                    {/* <div className=\"input-group\">\r\n                        <InputText\r\n                            text=\"\"\r\n                            type=\"color\"\r\n                            value=\"#ff0000\"\r\n                            name=\"\"\r\n                            change={openColorPicker}\r\n                        />\r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n            <div className=\"panel__group\">\r\n                <Textarea\r\n                    text=\"Текстовое содержание\"\r\n                    type=\"text\"\r\n                    value={text}\r\n                    name=\"text\"\r\n                    placeholder=\"Введите текст\"\r\n                    change={change}\r\n                />\r\n            </div>\r\n            <div className=\"panel__group\">\r\n                <InputText\r\n                    text=\"Ссылка в объявлении\"\r\n                    type=\"url\"\r\n                    value={link}\r\n                    name=\"link\"\r\n                    placeholder=\"https://\"\r\n                    change={change}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Inputs","E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\components\\inputs\\types\\InputColor.js",[],"E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\components\\notifications\\Alerts.js",[],"E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\components\\inputs\\types\\Select.js",[],"E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\components\\inputs\\types\\InputFile.js",[],"E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\components\\inputs\\types\\InputGradient.js",[],"E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\components\\inputs\\types\\Textarea.js",[],"E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\components\\Banner.js",[],"E:\\Work\\react\\new-test-in-avito\\new-test-in-avito\\src\\components\\notifications\\types\\AlertUsual.js",[],{"ruleId":"88","severity":1,"message":"89","line":63,"column":11,"nodeType":"90","messageId":"91","endLine":63,"endColumn":26},"no-unused-vars","'openColorPicker' is assigned a value but never used.","Identifier","unusedVar"]